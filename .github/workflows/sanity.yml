name: Build and push to AWS

on:
  push:
    branches: ['dev']

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  ingest:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}          
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push ingest docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: j9v4j3c7  # Replace with your registry alias
          REPOSITORY: pirate-wgrib-python-arm
          IMAGE_TAG: dev
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG \
            -f Docker/pirate-ingest-dockerfile . --push

  api:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}          
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push api docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: j9v4j3c7  # Replace with your registry alias
          REPOSITORY: pirate-alpine-zarr
          IMAGE_TAG: dev
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG \
            -f Docker/pirate-api-dockerfile . --push

      - name: Build, tag, and push ingest docker image to Amazon ECR Public (api job)
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: j9v4j3c7  # Replace with your registry alias
          REPOSITORY: pirate-wgrib-python-arm
          IMAGE_TAG: dev
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG \
            -f Docker/pirate-ingest-dockerfile . --push

  deploy:
    runs-on: ubuntu-24.04
    needs:
      - api
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Force new ECS deployment for pirate-api service
        run: |
          aws ecs update-service --cluster PirateBackEc2 --service PirateDev --force-new-deployment
