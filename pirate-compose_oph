services:
  # Ofelia for scheduling tasks
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: daemon --docker 
    labels:
      ofelia.job-run.gfs-ingest.schedule: "0 10 5,11,17,23 * * *"
      ofelia.job-run.gfs-ingest.image: "pirateingest:latest" 
      ofelia.job-run.gfs-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.gfs-ingest.environment: '["wgrib2_path=/home/ubuntu/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/GFS", "forecast_path=/data/Prod/GFS", "historic_path=/data/Hist/GFS", "save_type=Download"]'
      ofelia.job-run.gfs-ingest.command: "GFS_Local_Ingest.py" 
      ofelia.job-run.gfs-ingest.no-overlap: "true"             
      ofelia.job-run.nbm-ingest.schedule: "0 30 0,2,4,6,8,10,12,14,16,18,20,22 * * *"
      ofelia.job-run.nbm-ingest.image: "pirateingest:latest" 
      ofelia.job-run.nbm-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.nbm-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/NBM", "forecast_path=/data/Prod/NBM", "historic_path=/data/Hist/NBM", "save_type=Download"]'
      ofelia.job-run.nbm-ingest.command: "NBM_Local_Ingest.py" 
      ofelia.job-run.nbm-ingest.no-overlap: "true"
      ofelia.job-run.nbm-fire-ingest.schedule: "0 40 5,11,17,23 * * *"
      ofelia.job-run.nbm-fire-ingest.image: "pirateingest:latest" 
      ofelia.job-run.nbm-fire-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.nbm-fire-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/NBM_Fire", "forecast_path=/data/Prod/NBM_Fire", "historic_path=/data/Hist/NBM_Fire", "save_type=Download"]'
      ofelia.job-run.nbm-fire-ingest.command: "NBM_Fire_Local_Ingest.py" 
      ofelia.job-run.nbm-fire-ingest.no-overlap: "true"
      ofelia.job-run.subh-ingest.schedule: "0 45 * * * *"
      ofelia.job-run.subh-ingest.image: "pirateingest:latest" 
      ofelia.job-run.subh-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.subh-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/SubH", "forecast_path=/data/Prod/SubH", "historic_path=/data/Hist/SubH", "save_type=Download"]'
      ofelia.job-run.subh-ingest.command: "SubH_Local_Ingest.py" 
      ofelia.job-run.subh-ingest.no-overlap: "true"
      ofelia.job-run.gefs-ingest.schedule: "0 0 1,7,13,19 * * *"
      ofelia.job-run.gefs-ingest.image: "pirateingest:latest" 
      ofelia.job-run.gefs-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.gefs-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/GEFS", "forecast_path=/data/Prod/GEFS", "historic_path=/data/Hist/GEFS", "save_type=Download"]'
      ofelia.job-run.gefs-ingest.command: "GEFS_Local_Ingest.py" 
      ofelia.job-run.gefs-ingest.no-overlap: "true"
      ofelia.job-run.hrrr-ingest.schedule: "0 40 1,3,5,7,9,11,13,15,17,19,21,23 * * *"
      ofelia.job-run.hrrr-ingest.image: "pirateingest:latest" 
      ofelia.job-run.hrrr-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.hrrr-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/HRRR", "forecast_path=/data/Prod/HRRR "historic_path=/data/Hist/HRRR", "save_type=Download"]'
      ofelia.job-run.hrrr-ingest.command: "HRRR_Local_Ingest.py" 
      ofelia.job-run.hrrr-ingest.no-overlap: "true"
      ofelia.job-run.hrrr6h-ingest.schedule: "0 10 3,9,15,21 * * *"
      ofelia.job-run.hrrr6h-ingest.image: "pirateingest:latest" 
      ofelia.job-run.hrrr6h-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.hrrr6h-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/HRRR_6H", "forecast_path=/data/Prod/HRRR_6H", "historic_path=/data/Hist/HRRR_6H", "save_type=Download"]'
      ofelia.job-run.hrrr6h-ingest.command: "HRRR_6H_Local_Ingest.py" 
      ofelia.job-run.hrrr6h-ingest.no-overlap: "true"
      ofelia.job-run.nws-alerts-ingest.schedule: "0 0,30 * * * *"
      ofelia.job-run.nws-alerts-ingest.image: "pirateingest:latest" 
      ofelia.job-run.nws-alerts-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.nws-alerts-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/NWS_Alerts", "forecast_path=/data/Prod/NWS_Alerts", "historic_path=/data/Hist/NWS_Alerts", "save_type=Download"]'
      ofelia.job-run.nws-alerts-ingest.command: "NWS_Alerts_Local.py" 
      ofelia.job-run.nws-alerts-ingest.no-overlap: "true"
      ofelia.job-run.ecmwf-ingest.schedule: "0 0 8,20 * * *"
      ofelia.job-run.ecmwf-ingest.image: "pirateingest:latest" 
      ofelia.job-run.ecmwf-ingest.volume: '["/home/ubuntu/Weather:/data:rw", "/mnt/block:/tmp:rw"]'
      ofelia.job-run.ecmwf-ingest.environment: '["/build/wgrib2_build/bin/wgrib2 ", "forecast_process_dir=/tmp/Process/ECMWF", "forecast_path=/data/Prod/ECMWF", "historic_path=/data/Hist/ECMWF", "save_type=Download"]'
      ofelia.job-run.ecmwf-ingest.command: "ECMWF_Local_Ingest.py" 
      ofelia.job-run.ecmwf-ingest.no-overlap: "true"
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully
      subh_ingest:
        condition: service_completed_successfully
      gefs_ingest:
        condition: service_completed_successfully
      hrrr_ingest:
        condition: service_completed_successfully
      hrrr_6h_ingest:
        condition: service_completed_successfully
      nws_alerts_ingest:
        condition: service_completed_successfully         
      ecmwf_ingest:
        condition: service_completed_successfully         
                                                                                                            

  # GFS Ingest
  gfs_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/GFS"
      forecast_path: "/data/Prod/GFS"
      historic_path: "/data/Hist/GFS"
      save_type: "Download"
    command: GFS_Local_Ingest.py

  # NBM Ingest
  nbm_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/NBM"
      forecast_path: "/data/Prod/NBM"
      historic_path: "/data/Hist/NBM"
      save_type: "Download"
    command: ["NBM_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully    

  # NBM Fire Ingest
  nbm_fire_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/NBM_Fire"
      forecast_path: "/data/Prod/NBM_Fire"
      historic_path: "/data/Hist/NBM_Fire"
      save_type: "Download"
    command: ["NBM_Fire_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully  

  # SubH Ingest
  subh_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/SubH"
      forecast_path: "/data/Prod/SubH"
      historic_path: "/data/Hist/SubH"
      save_type: "Download"
    command: ["SubH_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      

  # GEFS Ingest
  gefs_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/GEFS"
      forecast_path: "/data/Prod/GEFS"
      historic_path: "/data/Hist/GEFS"
      save_type: "Download"
    command: ["GEFS_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      
      subh_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully        

  # HRRR Ingest
  hrrr_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/HRRR"
      forecast_path: "/data/Prod/HRRR"
      historic_path: "/data/Hist/HRRR"
      save_type: "Download"
    command: ["HRRR_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      
      subh_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully 
      gefs_ingest:
        condition: service_completed_successfully                  
      
  # HRRR 6H Ingest
  hrrr_6h_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/HRRR_6H"
      forecast_path: "/data/Prod/HRRR_6H"
      historic_path: "/data/Hist/HRRR_6H"
      save_type: "Download"
    command: ["HRRR_6H_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      
      subh_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully 
      gefs_ingest:
        condition: service_completed_successfully       

  # NWS Alerts Ingest
  nws_alerts_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/NWS_Alerts"
      forecast_path: "/data/Prod/NWS_Alerts"
      historic_path: "/data/Hist/NWS_Alerts"
      save_type: "Download"
    command: ["NWS_Alerts_Local.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      
      subh_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully 
      gefs_ingest:
        condition: service_completed_successfully       

  # ECMWF Ingest
  ecmwf_ingest:
    image: pirateingest:latest
    volumes:
      - /home/ubuntu/Weather:/data
      - /mnt/block:/tmp
    environment:
      wgrib2_path: "/build/wgrib2_build/bin/wgrib2 "
      forecast_process_dir: "/tmp/Process/ECMWF"
      forecast_path: "/data/Prod/ECMWF"
      historic_path: "/data/Hist/ECMWF"
      save_type: "Download"
    command: ["ECMWF_Local_Ingest.py"]
    depends_on:
      gfs_ingest:
        condition: service_completed_successfully
      nbm_ingest:
        condition: service_completed_successfully      
      subh_ingest:
        condition: service_completed_successfully
      nbm_fire_ingest:
        condition: service_completed_successfully 
      gefs_ingest:
        condition: service_completed_successfully  

  # Consistently running API server
#  api_server:
#    image: public.ecr.aws/j9v4j3c7/pirate-alpine-zarr:latest
#    ports:
#      - "8083:8083"
#    volumes:
#      - efs/scripts:/efs:ro
#      - nvme/Prod:/tmp
#      - nvme/Temp:/ebs
#      - nvme/Data:/data:ro
#    environment:
#      STAGE: "PROD"
#      useETOPO: "False"
#      s3_bucket: "/data"
#      TIMING: "TRUE"
#      save_type: "Download"
#    entrypoint: "uvicorn"  
#    working_dir: "/efs"
#    command: ["responseLocal:app", "--host", "0.0.0.0", "--port", "8083"]
#    depends_on:
#      gfs_ingest:
#        condition: service_completed_successfully
#      nbm_ingest:
#        condition: service_completed_successfully
#      nbm_fire_ingest:
#        condition: service_completed_successfully
#      subh_ingest:
#        condition: service_completed_successfully
#      gefs_ingest:
#        condition: service_completed_successfully
#      hrrr_ingest:
#        condition: service_completed_successfully
#      hrrr_6h_ingest:
#        condition: service_completed_successfully
#      nws_alerts_ingest:
#        condition: service_completed_successfully    
#      ecmwf_ingest:
#        condition: service_completed_successfully  